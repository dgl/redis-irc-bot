#!/usr/bin/env bash
# Â©2023 David Leadbeater <https://dgl.cx/0bsd>; SPDX-License-Identifier: 0BSD
#
# A simple IRC bot using Redis pubsub. The idea is this can never change and
# all your logic is done via talking to it via Redis pubsub.
#
# Writing to "your-channel" sends messages to the channel.
#
# Writing to "your-channel:raw" (without a #) sends raw messages, this is used
# for internal uses too. If Redis goes down, it won't be able to reply to PINGs
# on IRC and so will disconnect.

redis="${1:-127.0.0.1}"
server="${2:-irc.example.com}"
nick="${3:-rbot}"
channel="${4:?Usage: $0 redis-server irc-server nick channel}"

if [[ ${channel:0:1} = '#' ]]; then
  channel="${channel:1}"
fi

debug() {
  [[ -z $DEBUG ]] && return
  echo "$*" | cat -v >&2
}

redis() {
  if [[ -z $DEBUG ]]; then
    redis-cli -h $redis "$@" >/dev/null
  else
    (set -x; redis-cli -h $redis "$@")
  fi
}

find-stdbuf() {
  # OpenBSD, etc.
  gstdbuf --version &>/dev/null && stdbuf=gstdbuf
  # GNU/Something
  stdbuf --version &>/dev/null && stdbuf=stdbuf

  if [[ -z $stdbuf ]]; then
    echo "You need to install stdbuf from coreutils"
    exit 1
  fi
}

input() {
  echo "USER $nick * * :https://dgl.cx/redis-irc-bot"
  echo "NICK $nick"
  $stdbuf -oL redis-cli -h $redis subscribe $channel ${channel}:raw | while read type; do
    read topic # 2nd line
    read message # 3rd line

    debug "R: $type $topic $message"

    if [[ $topic = ${channel}:raw ]]; then
      echo "$message"
      if [[ "${message:0:4}" = QUIT ]]; then
        break
      fi
    else
      echo "PRIVMSG #$topic :$message"
    fi
  done
}

output() {
  while read line; do
    line="${line//}"
    debug "$line"

    if [[ ${line:0:4} = PING ]]; then
      redis publish "${channel}:raw" "PONG${line:4}"
    elif [[ ${line:0:5} = ERROR ]]; then
      break
    elif [[ ${line:0:1} = ":" ]]; then
      local args=($line)
      local cmd=${args[1]}

      if [[ $cmd = "001" ]]; then
	redis publish "${channel}:raw" "JOIN #${channel}"
      elif [[ $cmd = "PING" ]]; then
	redis publish "${channel}:raw" "PONG $nick"
      elif [[ $cmd = "PRIVMSG" ]]; then
        if [[ ${args[2]:0:1} = '#' ]]; then
          redis publish "${channel}:in" "$line"
        elif [[ -n $DEBUG ]]; then
          echo "$line" | cat -v
        fi
      fi
    fi
  done
  redis publish "${channel}:raw" "QUIT"
}

find-stdbuf

while :; do
  echo "-- Connecting to $server and joining #${channel}"
  input | nc -c $server 6697 | output
done
